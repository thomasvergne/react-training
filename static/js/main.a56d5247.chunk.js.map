{"version":3,"sources":["components/TodoContext.js","components/List.js","components/Add.js","pages/App.js","reportWebVitals.js","index.js"],"names":["Todo","createContext","TodoProvider","Provider","List","useContext","todo","removeTodo","changeTodo","className","length","map","item","index","type","defaultValue","value","onChangeCapture","e","target","onClick","Add","addTodo","useState","input","setInput","pushItem","onKeyDown","key","onChange","App","setTodo","actions","filter","x","idx","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAEaA,EAAOC,wBAAc,MACrBC,EAAeF,EAAKG,S,OCApBC,EAAO,WAClB,MAAuCC,qBAAWL,GAA5CM,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,WAAYC,EAAxB,EAAwBA,WAExB,OACE,qBAAKC,UAAU,2BAAf,SAEIH,EAAKI,OAAS,EAEZ,oBAAID,UAAU,kBAAd,SACGH,EAAKK,KAAI,SAACC,EAAMC,GACf,OACE,qBAAgBJ,UAAU,gBAA1B,UACE,sBAAMA,UAAU,6FAAhB,SACE,uBACEK,KAAK,OACLC,aAAcH,EAAKI,MACnBC,gBAAiB,SAACC,GAAD,OAAOV,EAAWU,EAAEC,OAAOH,MAAOH,IACnDJ,UAAU,qCAEd,wBACEA,UAAU,mFACVW,QAAS,kBAAMb,EAAWM,IAF5B,yBAROA,QAkBf,oBAAIJ,UAAU,oCAAd,gEC7BGY,EAAM,WACjB,IAAQC,EAAYjB,qBAAWL,GAAvBsB,QACR,EAA4BC,mBAAS,IAArC,mBAAQC,EAAR,KAAeC,EAAf,KACMC,EAAW,WAAQJ,EAAQE,GAAQC,EAAS,KAElD,OACE,qBAAKhB,UAAU,+BAAf,SACE,sBAAKA,UAAU,0DAAf,UACE,uBACEK,KAAK,OACLE,MAAOQ,EACPf,UAAU,8DACVkB,UAAW,SAACT,GAAD,MAAiB,UAAVA,EAAEU,IAAkBF,IAAa,MACnDG,SAAU,SAACX,GAAD,OAAOO,EAASP,EAAEC,OAAOH,UAErC,uBACEF,KAAK,SACLE,MAAM,UACNP,UAAU,4DACVW,QAASM,UCjBNI,EAAM,WACjB,MAAwBP,mBAAS,CAAC,CAACP,MAAO,QAAS,CAACA,MAAO,UAA3D,mBAAOV,EAAP,KAAayB,EAAb,KACMC,EAAU,CACdD,UACAT,QAAS,SAACV,GAAD,OAAUmB,EAAQ,GAAD,mBAAKzB,GAAL,CAAW,CAAEU,MAAOJ,OAC9CL,WAAY,SAACM,GAAD,OAAWkB,EAAQzB,EAAK2B,QAAO,SAACC,EAAGC,GAAJ,OAAYA,IAAQtB,OAC/DL,WAAY,SAACI,EAAMC,GAEjB,OADAP,EAAKO,GAAOG,MAAQJ,EACbmB,EAAQ,YAAIzB,MAIvB,OACE,eAACJ,EAAD,CAAcc,MAAK,aAAGV,QAAS0B,GAA/B,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCRSI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a56d5247.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const Todo = createContext(null);\r\nexport const TodoProvider = Todo.Provider;","import { useContext } from 'react';\r\nimport { Todo } from './TodoContext';\r\n\r\nexport const List = () => {\r\n  let { todo, removeTodo, changeTodo } = useContext(Todo);\r\n\r\n  return (\r\n    <div className=\"flex justify-center my-8\">\r\n      {\r\n        todo.length > 0 ? \r\n        (\r\n          <ul className=\"w-2/3 space-y-4\">\r\n            {todo.map((item, index) => {\r\n              return (\r\n                <li key={index} className=\"flex flex-row\">\r\n                  <span className=\"flex flex-auto bg-gray-100 py-1.5 rounded-l-lg items-center px-4 font-medium text-gray-700\">\r\n                    <input \r\n                      type=\"text\" \r\n                      defaultValue={item.value}\r\n                      onChangeCapture={(e) => changeTodo(e.target.value, index)}\r\n                      className=\"bg-gray-100 focus:outline-none\" />\r\n                  </span>\r\n                  <button\r\n                    className=\"bg-red-400 py-1.5 px-4 rounded-r-lg text-sm text-white font-medium tracking-wide\"\r\n                    onClick={() => removeTodo(index)}>\r\n                    Supprimer\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          <h1 className=\"text-lg font-medium text-gray-700\">\r\n            Aucune tâche n'a encore été ajoutée\r\n          </h1>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}","import { Todo } from './TodoContext';\r\nimport { useContext, useState } from 'react';\r\n\r\nexport const Add = () => {\r\n  const { addTodo } = useContext(Todo);\r\n  const [ input, setInput ] = useState('');\r\n  const pushItem = () => { addTodo(input); setInput(''); }\r\n\r\n  return (\r\n    <div className=\"flex flex-row justify-center\">\r\n      <div className=\"bg-gray-100 w-2/3 flex flex-row p-2 rounded-lg border-2\">\r\n        <input \r\n          type=\"text\"\r\n          value={input}\r\n          className=\"bg-gray-100 flex flex-auto text-gray-700 focus:outline-none\"\r\n          onKeyDown={(e) => e.key === 'Enter' ? pushItem() : null}\r\n          onChange={(e) => setInput(e.target.value)}\r\n        />\r\n        <input \r\n          type=\"submit\" \r\n          value=\"Ajouter\" \r\n          className=\"bg-gray-100 px-3 text-gray-700 font-medium cursor-pointer\"\r\n          onClick={pushItem}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};","import { useState } from 'react';\r\nimport { TodoProvider } from '../components/TodoContext';\r\nimport { List } from '../components/List';\r\nimport { Add } from '../components/Add';\r\n\r\nexport const App = () => {\r\n  const [todo, setTodo] = useState([{value: 'test'}, {value: 'bruh'}]);\r\n  const actions = {\r\n    setTodo,\r\n    addTodo: (item) => setTodo([...todo, { value: item, }]),\r\n    removeTodo: (index) => setTodo(todo.filter((x, idx) => idx !== index)),\r\n    changeTodo: (item, index) => {\r\n      todo[index].value = item;\r\n      return setTodo([...todo]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TodoProvider value={{todo, ...actions}}>\r\n      <List />\r\n      <Add />\r\n    </TodoProvider>\r\n  );\r\n};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport { App } from './pages/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}